version: '3.8'

services:
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    volumes:
    - ./:/var/www
    environment:
      - "DB_PORT=3306"
      - "DB_HOST=mysql"
      - "XDG_CONFIG_HOME=/app"
    ports:
    - "8080:80"
    links:
      - php-fpm
      - node

  php-fpm:
    build:
      context: ./docker/php-fpm
      dockerfile: Dockerfile
    volumes:
      - ./:/var/www
    environment:
      - "DB_PORT=3306"
      - "DB_HOST=mysql"
    links:
      - mysql
      - node

  php-cli:
    build:
      context: ./
      dockerfile: docker/php-cli.docker
    volumes:
    - ./:/var/www
    environment:
      - "DB_PORT=3306"
      - "DB_HOST=mysql"
      - "COMPOSER_MEMORY_LIMIT=-1"
    links:
      - mysql
    tty: true

  # mysql:
  #   image: mysql:8.0
  #   volumes:
  #   - db_data:/var/lib/mysql
  #   environment:
  #     - MYSQL_DATABASE=inventory_managment
  #     - MYSQL_USER=root
  #     - MYSQL_ROOT_USER=root
  #     - MYSQL_PASSWORD=password
  #     - MYSQL_ROOT_PASSWORD=password
  #   ports:
  #     - 3306:3306

  mysql:
    image: mysql:8.0
    ports:
      - "${DB_PORT}:${DB_PORT}"
    env_file:
      - ./.env
    
    volumes:
      - db_data:/var/lib/mysql


  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      - PMA_HOST=mysql
      - PMA_USER=user
      - PMA_PASSWORD=secret
      - UPLOAD_LIMIT=64M
    restart: always
    ports:
      - 8081:80

  node:
    image: node:18-alpine
    ports:
        - "3000:3000"
    volumes:
    - ./:/var/www
    working_dir: /var/www
    tty: true

volumes:
  db_data:
